<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>de.governikus</groupId>
    <artifactId>identification-report-impl-java</artifactId>
    <version>2.0.0</version>

    <name>Identification Report Implementation</name>
    <description>The identification report is a JSON structure used to identify natural or legal persons in government
        processes. This project provides a simple Java API for easy and fast creation of such reports.
    </description>
    <url>https://github.com/Governikus/Identification-Report-Impl-Java</url>

    <licenses>
        <license>
            <name>EUPL</name>
            <url>https://joinup.ec.europa.eu/collection/eupl/eupl-text-eupl-12</url>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>Governikus</name>
            <email>autent@governikus.de</email>
            <organization>Governikus</organization>
            <url>https://www.governikus.de</url>
        </developer>
    </developers>

    <scm>
        <!-- When preparing a release, add -DscmConnection=scm:git:... -->
        <connection>${scmConnection}</connection>
        <tag>identification-report-impl-java-2.0.0</tag>
        <url>https://github.com/Governikus/Identification-Report-Impl-Java</url>
    </scm>

    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>

        <!-- Maven version -->
        <maven.minimum.version>3.5.4</maven.minimum.version>

        <!-- Encodings -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- Sonar/Reporting settings -->
        <sonar.java.source>${maven.compiler.source}</sonar.java.source>
        <sonar.junit.reportPaths>${project.build.directory}/surefire-reports</sonar.junit.reportPaths>

        <!-- the surefire ${argLine} property, use for ${jacoco.agent.argLine} property in the coverage profile  -->
        <argLineTestExec>-Xmx1024m</argLineTestExec>

        <!-- Tells Sonar where the dependency-check report file is located, for
			the dependency-check-sonar-plugin https://github.com/stevespringett/dependency-check-sonar-plugin -->
        <sonar.dependencyCheck.reportPath>${project.build.directory}/dependency-check-report.xml
        </sonar.dependencyCheck.reportPath>
        <sonar.dependencyCheck.htmlReportPath>${project.build.directory}/dependency-check-report.html
        </sonar.dependencyCheck.htmlReportPath>

        <!-- dependency check properties -->
        <dependency-check-format>ALL</dependency-check-format>
        <!--suppress UnresolvedMavenProperty -->
        <formatter-path>${project.parent.basedir}</formatter-path>

        <!-- Disable the JavaDoc DocLint feature that comes with Java8 and checks
                the JavaDoc for errors and fail if some are found. -->
        <doclint>none</doclint>

        <!--suppress UnresolvedMavenProperty -->
        <formatter-path>${project.basedir}</formatter-path>

        <version.lombok>1.18.38</version.lombok>

        <!-- business dependencies -->
        <version.jackson>2.19.1</version.jackson>
        <version.json-schema-validator>1.5.8</version.json-schema-validator>
        <version.nimbus.jose.jwt>10.3.1</version.nimbus.jose.jwt>

        <!-- logging dependencies -->
        <version.slf4j>2.0.17</version.slf4j>

        <!-- test dependencies -->
        <version.junit.jupiter>5.13.3</version.junit.jupiter>
        <version.hamcrest>3.0</version.hamcrest>
        <version.log4j2>2.19.0</version.log4j2>

        <!-- plugins -->
        <version.maven.compiler.plugin>3.14.0</version.maven.compiler.plugin>
        <version.maven-install-plugin>3.1.3</version.maven-install-plugin>
        <version.maven-deploy-plugin>3.1.3</version.maven-deploy-plugin>
        <version.maven-clean-plugin>3.4.0</version.maven-clean-plugin>
        <version.maven.versions.plugin>2.18.0</version.maven.versions.plugin>
        <version.maven-surefire-plugin>3.5.3</version.maven-surefire-plugin>
        <version.maven.deploy.plugin>3.1.4</version.maven.deploy.plugin>
        <version.maven-release-plugin>3.1.1</version.maven-release-plugin>
        <version.maven.enforcer.plugin>3.6.0</version.maven.enforcer.plugin>
        <version.maven.formatter.plugin>2.27.0</version.maven.formatter.plugin>
        <version.maven.source.plugin>3.2.1</version.maven.source.plugin>
        <version.maven.javadoc.plugin>3.4.1</version.maven.javadoc.plugin>
        <version.maven.lombok.plugin>1.18.20.0</version.maven.lombok.plugin>
        <version.sonar.maven.plugin>3.9.1.2184</version.sonar.maven.plugin>
        <version.maven.dependency.plugin>3.5.0</version.maven.dependency.plugin>
        <version.dependency.check.maven>8.0.2</version.dependency.check.maven>
        <version.maven.jacoco.plugin>0.8.8</version.maven.jacoco.plugin>
        <version.maven-resources-plugin>3.3.1</version.maven-resources-plugin>
        <version.maven-site-plugin>3.21.0</version.maven-site-plugin>
        <version.maven-jar-plugin>3.4.2</version.maven-jar-plugin>
        <version.maven-enforcer-plugin>3.5.0</version.maven-enforcer-plugin>
        <version.maven-compiler-plugin>3.13.0</version.maven-compiler-plugin>
        <version.extra-enforcer-rules>1.9.0</version.extra-enforcer-rules>
        <version.maven-source-plugin>3.3.1</version.maven-source-plugin>
        <version.maven-javadoc-plugin>3.11.2</version.maven-javadoc-plugin>
        <version.sonar-jacoco-listeners>5.14.0.18788</version.sonar-jacoco-listeners>
        <version.jacoco-maven-plugin>0.8.12</version.jacoco-maven-plugin>
        <version.maven-gpg-plugin>3.2.7</version.maven-gpg-plugin>
        <version.central-publishing-maven-plugin>0.7.0</version.central-publishing-maven-plugin>

        <!-- check minimum require java version -->
        <enforcer.minimum.requireJavaVersion>[${maven.compiler.target},)</enforcer.minimum.requireJavaVersion>
        <!-- Ban snapshot versions for plugins per default. You can temporarily
            enable them during development by overriding this property -->
        <enforcer.banPluginSnapshots>true</enforcer.banPluginSnapshots>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <scope>provided</scope>
                <version>${version.lombok}</version>
            </dependency>
            <dependency>
                <groupId>com.networknt</groupId>
                <artifactId>json-schema-validator</artifactId>
                <version>${version.json-schema-validator}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>${version.jackson}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${version.jackson}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-jsr310</artifactId>
                <version>${version.jackson}</version>
            </dependency>
            <dependency>
                <groupId>com.nimbusds</groupId>
                <artifactId>nimbus-jose-jwt</artifactId>
                <version>${version.nimbus.jose.jwt}</version>
            </dependency>

            <!-- logging dependencies -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${version.slf4j}</version>
            </dependency>

            <!-- test dependencies -->
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-api</artifactId>
                <version>${version.junit.jupiter}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-params</artifactId>
                <version>${version.junit.jupiter}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>${version.junit.jupiter}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-library</artifactId>
                <version>${version.hamcrest}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-simple</artifactId>
                <version>${version.slf4j}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
        <dependency>
            <groupId>com.networknt</groupId>
            <artifactId>json-schema-validator</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
        </dependency>
        <dependency>
            <groupId>com.nimbusds</groupId>
            <artifactId>nimbus-jose-jwt</artifactId>
        </dependency>

        <!-- test dependencies -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-library</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
        </dependency>
    </dependencies>

    <build>
        <finalName>${project.artifactId}-${project.version}</finalName>

        <pluginManagement>
            <plugins>
                <plugin>
                    <!-- http://maven.apache.org/plugins/maven-deploy-plugin/ -->
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>${version.maven-deploy-plugin}</version>
                    <configuration>
                        <deployAtEnd>true</deployAtEnd>
                    </configuration>
                </plugin>

                <plugin>
                    <!-- http://maven.apache.org/plugins/maven-resources-plugin/ -->
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${version.maven-resources-plugin}</version>
                </plugin>
                <plugin>
                    <!-- http://maven.apache.org/plugins/maven-compiler-plugin/ -->
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${version.maven-compiler-plugin}</version>
                </plugin>
                <plugin>
                    <!-- http://maven.apache.org/plugins/maven-jar-plugin/ -->
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${version.maven-jar-plugin}</version>
                </plugin>
                <plugin>
                    <!-- http://maven.apache.org/enforcer/maven-enforcer-plugin/ -->
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>${version.maven-enforcer-plugin}</version>
                    <dependencies>
                        <dependency>
                            <groupId>org.codehaus.mojo</groupId>
                            <artifactId>extra-enforcer-rules</artifactId>
                            <version>${version.extra-enforcer-rules}</version>
                        </dependency>
                    </dependencies>
                </plugin>

                <plugin>
                    <!-- http://maven.apache.org/maven-release/maven-release-plugin/ -->
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>${version.maven-release-plugin}</version>
                    <inherited>true</inherited>
                    <configuration>
                        <!-- per our convention, all submodules must have the same version
                            as the parent -->
                        <autoVersionSubmodules>true</autoVersionSubmodules>

                        <!-- prepareAndPerformRelease can be used as profile activation condition -->
                        <arguments>-DprepareAndPerformRelease</arguments>

                        <!-- for hg and git -->
                        <remoteTagging>false</remoteTagging>
                        <pushChanges>false</pushChanges> <!-- no auto push, better rollback -->
                        <localCheckout>true</localCheckout> <!-- for git and hg -->
                        <waitBeforeTagging>2</waitBeforeTagging> <!-- for review-board -->
                    </configuration>
                </plugin>

                <plugin>
                    <!-- OWASP dependency-check http://jeremylong.github.io/DependencyCheck/index.html -->
                    <groupId>org.owasp</groupId>
                    <artifactId>dependency-check-maven</artifactId>
                    <version>${version.dependency-check-maven}</version>
                    <configuration>
                        <skipProvidedScope>true</skipProvidedScope>
                        <skipTestScope>true</skipTestScope>
                        <skipRuntimeScope>false</skipRuntimeScope>
                        <skipSystemScope>true</skipSystemScope>
                        <format>${dependency-check-format}</format>
                        <outputDirectory>${project.build.directory}</outputDirectory>
                        <failOnError>false</failOnError>
                    </configuration>
                </plugin>

                <plugin>
                    <!-- http://maven.apache.org/surefire/maven-surefire-plugin/ -->
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${version.maven-surefire-plugin}</version>
                    <inherited>true</inherited>
                    <configuration>
                        <runOrder>hourly</runOrder>
                        <!-- alphabetical on even hours, reverse alphabetical on odd hours -->
                        <forkMode>once</forkMode>
                        <forkCount>1</forkCount>
                        <!-- problem with reuse forks an jacoco : https://jira.sonarsource.com/browse/SONARJAVA-728 -->
                        <reuseForks>true</reuseForks>
                        <argLine>${argLineTestExec}</argLine>
                        <skip>false</skip>
                        <failIfNoTests>false</failIfNoTests>
                        <excludes>
                            <exclude>**/TestSuite*.*</exclude>
                            <exclude>**/*TestSuite.*</exclude>
                            <exclude>**/IT*.*</exclude>
                            <exclude>**/*IT.*</exclude>
                            <exclude>**/*IntegrationTest.*</exclude>
                            <exclude>**/*SystemTest.*</exclude>
                            <exclude>**/*PerformanceTest.*</exclude>
                        </excludes>
                    </configuration>
                </plugin>

                <plugin>
                    <!-- http://maven.apache.org/surefire/maven-surefire-report-plugin/ -->
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-report-plugin</artifactId>
                    <version>${version.maven-surefire-plugin}</version>
                </plugin>

                <plugin>
                    <!-- http://www.eclemma.org/jacoco/trunk/doc/maven.html -->
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${version.jacoco-maven-plugin}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${version.maven-source-plugin}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>${version.maven-javadoc-plugin}</version>
                </plugin>

                <plugin>
                    <!-- https://maven.apache.org/plugins/maven-clean-plugin/ -->
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>${version.maven-clean-plugin}</version>
                </plugin>

                <plugin>
                    <!-- https://maven.apache.org/plugins/maven-install-plugin/ -->
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>${version.maven-install-plugin}</version>
                    <configuration>
                        <installAtEnd>true</installAtEnd>
                    </configuration>
                </plugin>

                <plugin>
                    <!-- http://maven.apache.org/plugins/maven-site-plugin/ -->
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>${version.maven-site-plugin}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-gpg-plugin</artifactId>
                    <version>${version.maven-gpg-plugin}</version>
                </plugin>

                <plugin>
                    <groupId>org.sonatype.central</groupId>
                    <artifactId>central-publishing-maven-plugin</artifactId>
                    <version>${version.central-publishing-maven-plugin}</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>enforce-general-project-rules</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireJavaVersion>
                                    <version>${enforcer.minimum.requireJavaVersion}</version>
                                </requireJavaVersion>

                                <requireMavenVersion>
                                    <version>[${maven.minimum.version},)</version>
                                </requireMavenVersion>

                                <requireProperty>
                                    <property>project.groupId</property>
                                    <regex>de\.governikus(\..+)?</regex>
                                    <regexMessage>The groupId must start with de.governikus.</regexMessage>
                                </requireProperty>

                                <dependencyConvergence />

                                <requirePluginVersions>
                                    <message>Best Practice is to always define plugin versions!</message>
                                    <banSnapshots>${enforcer.banPluginSnapshots}</banSnapshots>
                                </requirePluginVersions>

                                <requireReleaseDeps>
                                    <onlyWhenRelease>true</onlyWhenRelease>
                                    <message>No Snapshots Allowed!</message>
                                </requireReleaseDeps>

                                <reactorModuleConvergence>
                                    <message>The reactor is not valid</message>
                                </reactorModuleConvergence>

                                <banDistributionManagement>
                                    <allowSite>true</allowSite>
                                </banDistributionManagement>

                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>net.revelc.code.formatter</groupId>
                <artifactId>formatter-maven-plugin</artifactId>
                <version>${version.maven.formatter.plugin}</version>
                <configuration>
                    <configFile>${formatter-path}/formatter.xml</configFile>
                    <lineEnding>LF</lineEnding>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>validate</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>


    <profiles>
        <!-- from http://www.aheritier.net/maven-failsafe-sonar-and-jacoco-are-in-a-boat/ -->
        <profile>
            <id>coverage</id>
            <activation>
                <!-- activate automatically when built on Jenkins build server -->
                <property>
                    <name>env.CI</name>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>org.sonarsource.java</groupId>
                    <artifactId>sonar-jacoco-listeners</artifactId>
                    <version>${version.sonar-jacoco-listeners}</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <inherited>true</inherited>
                        <configuration>
                            <reportsDirectory>${sonar.junit.reportPaths}</reportsDirectory>
                            <properties>
                                <property>
                                    <name>listener</name>
                                    <value>org.sonar.java.jacoco.JUnitListener</value>
                                </property>
                            </properties>
                            <argLine>${argLineTestExec} ${jacoco.agent.argLine}</argLine>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <configuration>
                            <excludes>
                                <!-- exclude javassist classes (leads to runtime exception in coverage) -->
                                <!-- see http://docs.sonarqube.org/display/PLUG/JaCoCo+Plugin for
                                    more information -->
                                <exclude>*_javassist_*</exclude>
                                <exclude>org.springframework.*</exclude>
                            </excludes>
                        </configuration>
                        <executions>
                            <!-- Unit tests -->
                            <execution>
                                <id>pre-unit-test</id>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                                <phase>initialize</phase>
                                <configuration>
                                    <!-- JaCoCo runtime agent for surefire-plugin -->
                                    <propertyName>jacoco.agent.argLine</propertyName>
                                    <append>true</append>
                                </configuration>
                            </execution>
                            <execution>
                                <id>post-unit-test</id>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                                <phase>test</phase>
                                <configuration>
                                    <outputDirectory>${project.reporting.outputDirectory}/jacoco</outputDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>attachSourceAndJavaDoc</id>
            <activation>
                <!-- activate automatically when built on Jenkins build server -->
                <property>
                    <name>env.CI</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <executions>
                            <!-- http://stackoverflow.com/questions/4251488/maven-release-plugin-fails-source-artifacts-getting-deployed-twice -->
                            <!-- This id must match the -Prelease-profile id value or else sources
								will be "uploaded" twice, which cause Nexus to fail -->
                            <execution>
                                <id>attach-sources</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                                <phase>none</phase>
                            </execution>
                            <execution>
                                <id>attach-sources-new</id>
                                <goals>
                                    <goal>jar-no-fork</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <inherited>true</inherited>
                        <configuration>
                            <quiet>true</quiet>
                            <detectJavaApiLink>false</detectJavaApiLink>
                        </configuration>
                        <executions>
                            <execution>
                                <id>attach-javadocs</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>require-upper-bound-deps</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-enforcer-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>require-upper-bound-deps</id>
                                <goals>
                                    <goal>enforce</goal>
                                </goals>
                                <configuration>
                                    <rules>
                                        <requireUpperBoundDeps />
                                    </rules>
                                    <fail>true</fail>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>SignAndDeploy</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.sonatype.central</groupId>
                        <artifactId>central-publishing-maven-plugin</artifactId>
                        <extensions>true</extensions>
                        <configuration>
                            <publishingServerId>central</publishingServerId>
                            <excludeArtifacts>
                                <excludeArtifact>panstar-sdk-classpath-test</excludeArtifact>
                            </excludeArtifacts>
                        </configuration>
                        <executions>
                            <execution>
                                <id>deploy-artifacts</id>
                                <phase>deploy</phase>
                                <goals>
                                    <goal>publish</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
